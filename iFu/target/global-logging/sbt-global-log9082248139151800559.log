[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Lenovo\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Lenovo\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17.0.6)
[debug]       Load.loadUnit: plugins took 209.3241ms
[debug]       Load.loadUnit: defsScala took 0.4426ms
[debug] [Loading] Scanning directory C:\Users\Lenovo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Lenovo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 41.5154 ms
[debug]           Load.resolveProject(global-plugins) took 114.8408ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Lenovo\.sbt\1.0\plugins, plugins: List(<none>))) took 192.6554ms
[debug] [Loading] Done in C:\Users\Lenovo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 226.3766ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3205ms
[debug]     Load.loadUnit(file:/C:/Users/Lenovo/.sbt/1.0/plugins/, ...) took 450.5817ms
[debug]   Load.apply: load took 938.1555ms
[debug]   Load.apply: resolveProjects took 15.1293ms
[debug]   Load.apply: finalTransforms took 106.7697ms
[debug]   Load.apply: config.delegates took 7.4327ms
[debug]   Load.apply: Def.make(settings)... took 797.7438ms
[debug]   Load.apply: structureIndex took 238.3954ms
[debug]   Load.apply: mkStreams took 5.1706ms
[info] loading global plugins from C:\Users\Lenovo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4602.1049ms
[debug]           Load.loadUnit: plugins took 65.1951ms
[debug]           Load.loadUnit: defsScala took 0.0071ms
[debug] [Loading] Scanning directory C:\Users\Lenovo\Desktop\ifu\iFu\iFu\project
[debug]             Load.loadUnit: mkEval took 10.748ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Lenovo\Desktop\ifu\iFu\iFu\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8693 ms
[info] loading settings for project ifu-build from plugins.sbt,idea1.sbt ...
[debug]               Load.resolveProject(ifu-build) took 11.492ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ifu-build, base: C:\Users\Lenovo\Desktop\ifu\iFu\iFu\project, plugins: List(<none>))) took 14.116ms
[debug] [Loading] Done in C:\Users\Lenovo\Desktop\ifu\iFu\iFu\project, returning: (ifu-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3492.8108ms
[debug]           Load.loadUnit: cleanEvalClasses took 27.3712ms
[debug]         Load.loadUnit(file:/C:/Users/Lenovo/Desktop/ifu/iFu/iFu/project/, ...) took 3587.6064ms
[debug]       Load.apply: load took 3591.4344ms
[debug]       Load.apply: resolveProjects took 0.2432ms
[debug]       Load.apply: finalTransforms took 9.8253ms
[debug]       Load.apply: config.delegates took 0.4436ms
[debug]       Load.apply: Def.make(settings)... took 554.9262ms
[debug]       Load.apply: structureIndex took 52.1099ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\Users\Lenovo\Desktop\ifu\iFu\iFu\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6834.4834ms
[debug]     Load.loadUnit: defsScala took 0.0057ms
[debug] [Loading] Scanning directory C:\Users\Lenovo\Desktop\ifu\iFu\iFu
[debug]       Load.loadUnit: mkEval took 0.8018ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1882 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 173.8625ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Lenovo\Desktop\ifu\iFu\iFu, plugins: List(<none>))) took 179.4934ms
[debug] [Loading] Done in C:\Users\Lenovo\Desktop\ifu\iFu\iFu, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4338.3994ms
[debug]     Load.loadUnit: cleanEvalClasses took 183.4928ms
[debug]   Load.loadUnit(file:/C:/Users/Lenovo/Desktop/ifu/iFu/iFu/, ...) took 11358.676ms
[debug] Load.apply: load took 11362.0705ms
[debug] Load.apply: resolveProjects took 0.1794ms
[debug] Load.apply: finalTransforms took 91.5223ms
[debug] Load.apply: config.delegates took 0.4087ms
[debug] Load.apply: Def.make(settings)... took 334.2728ms
[debug] Load.apply: structureIndex took 433.2871ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to %NAME% (in build file:/C:/Users/Lenovo/Desktop/ifu/iFu/iFu/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53275 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53275, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to %NAME% (in build file:/C:/Users/Lenovo/Desktop/ifu/iFu/iFu/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
